import numpy as np

from pyhpc._cpp_lib import calc_potential_grid


def potential_cpp(particle_coords, grid_resolution, charges, num_threads=1):
    """
    Calculate the electrical potential generated by the particles at the
    given coordinates using C++.

    :param particle_coords: 2xN array of the x, y coordinates
        of the particles (where N is the number of particles).
    :type particle_coords: np.ndarray
    :param grid_resolution: The resolution (in each dimension) of the
        grid over which to calculate the potential.
        Each dimension has the same resolution, hence the calculation is
        performed over a square.
    :type grid_resolution: int
    :param charges: 1xN array specifying the charge of each particle.
    :type charges: np.array
    :param num_threads: The number of threads to use to perform the
        calculation. Default is 1.
    :type num_thread: int
    """
    particle_coords = particle_coords.astype(np.float64)
    grid_resolution = int(grid_resolution)
    charges = charges.astype(np.int32)
    num_threads = int(num_threads)
    grid = calc_potential_grid(
        particle_coords[:, 0], particle_coords[:, 1], int(grid_resolution), charges,
        num_threads
    )
    return np.reshape(grid, (grid_resolution, grid_resolution))
